<mah:MetroWindow x:Class="DnsProxy.Gui.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:viewModels="clr-namespace:DnsProxy.Gui.ViewModels"
        mc:Ignorable="d"

        Title="DnsProxy" 
        Height="450" 
        Width="800"  

        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
        Icon="proxy_server_29251.ico"

        BorderThickness="1"
        WindowStartupLocation="CenterScreen">

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Click="LaunchGitHubSite" ToolTip="Open up the GitHub site">
                <iconPacks:PackIconModern Width="22"
                                          Height="22"
                                          Kind="SocialGithubOctocat" />
            </Button>
            <tb:TaskbarIcon x:Name="MyNotifyIcon"
                            IconSource="proxy_server_29251.ico"
                            ToolTipText="hello world"
                            TrayContextMenuOpen="MyNotifyIcon_TrayContextMenuOpen"
                            PreviewTrayContextMenuOpen="MyNotifyIcon_PreviewTrayContextMenuOpen">

                <!-- Set a simple context menu  -->
                <!-- the data context of the context menu is the NotifyIcon itself (see more about this in DataBinding samples) -->
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Show Window" 
                                  Command="{Binding ShowWindowCommand}"
                                  CommandParameter="{Binding}" />
                        <MenuItem Header="Hide Window" 
                                  Command="{Binding HideWindowCommand}"
                                  CommandParameter="{Binding}" />
                        <Separator />
                        <MenuItem Header="Exit" 
                                  Command="{Binding CloseWindowCommand}"
                                  CommandParameter="{Binding}" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>

            </tb:TaskbarIcon>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.DataContext>
        <viewModels:ShellViewModel />
    </mah:MetroWindow.DataContext>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button x:Name="GoBackButton"
                    Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                    AutomationProperties.Name="Go back"
                    Click="GoBack_OnClick">
                <mah:FontIcon AutomationProperties.Name="Go back icon"
                                   FontSize="14"
                                   Glyph="&#xE72B;" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    
    <mah:MetroWindow.Resources>

        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                <TextBlock Grid.Column="1"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />

                
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <mah:TransitioningContentControl Content="{Binding}"
                                                  RestartTransitionOnContentChange="True"
                                                  Transition="Custom">
                            <mah:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                            KeyTime="00:00:00.300"
                                            Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="PreviousContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </mah:TransitioningContentControl.CustomVisualStates>
                        </mah:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </mah:MetroWindow.Resources>

    <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                          DisplayMode="CompactInline"
                          IsPaneOpen="False"
                          ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                          ItemTemplate="{StaticResource MenuItemTemplate}"
                          ItemsSource="{Binding Menu}"
                          OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                          OptionsItemsSource="{Binding OptionsMenu}" />

</mah:MetroWindow>
